//

package program;
import java.util.*;
public class validParentheseUsingStack {
	
	public static boolean isValid(String s) {
		Stack<Character> stack=new Stack<>();
	    for(char c:s.toCharArray()) {
	    	if(c=='('||c=='['||c=='{') {
	    		stack.push(c);
	    	}
	    	else if(c==')'||c==']'||c=='}') {
	    		if(stack.isEmpty()) {
	    			return false;
	    		}
	    		char top=stack.pop();
	    		if((c==')' && top !='(')||
	    			(c==']' && top !='[')||
	    			(c=='}' && top !='{')) {
	    			return false;
	    		}
	    	}
	    }
	    return stack.isEmpty();
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String test1="()[]{}";
		String test2="([)]";
		String test3="{[]}";
		
		 System.out.println("Test 1 is " + (isValid(test1) ? "valid" : "invalid"));
	     System.out.println("Test 2 is " + (isValid(test2) ? "valid" : "invalid"));
	     System.out.println("Test 3 is " + (isValid(test3) ? "valid" : "invalid"));
	    }
 }
//Output:

Test 1 is valid
Test 2 is invalid
Test 3 is valid